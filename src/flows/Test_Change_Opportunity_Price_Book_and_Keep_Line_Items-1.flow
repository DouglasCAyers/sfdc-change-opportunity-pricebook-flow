<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <assignments>
        <description>Adds the new opportunity line item to the collection to later be inserted once done iterating the loop.</description>
        <name>AddNewOpportunityLineItem</name>
        <label>AddNewOpportunityLineItem</label>
        <locationX>532</locationX>
        <locationY>519</locationY>
        <assignmentItems>
            <assignToReference>newOpportunityLineItems</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>newOpportunityLineItem</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LoopOpportunityLineItems</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Copy user-entered data from the old opportunity line item into the new opportunity line item.</description>
        <name>AssignNewOpportunityLineItem</name>
        <label>AssignNewOpportunityLineItem</label>
        <locationX>682</locationX>
        <locationY>521</locationY>
        <assignmentItems>
            <assignToReference>newOpportunityLineItem.Description</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>opportunityLineItem.Description</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newOpportunityLineItem.Quantity</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>opportunityLineItem.Quantity</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newOpportunityLineItem.UnitPrice</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>opportunityLineItem.UnitPrice</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newOpportunityLineItem.OpportunityId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>opportunity.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newOpportunityLineItem.PricebookEntryId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>newPriceBookEntry.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>AddNewOpportunityLineItem</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>If the new price book entry does not exist then keep track of those products so we can notify the user before changing the opportunity price book and swapping out line items. User may decide to cancel this operation if any products are missing, or they may decide to proceed without those products.</description>
        <name>AssignNotFoundProduct</name>
        <label>AssignNotFoundProduct</label>
        <locationX>532</locationX>
        <locationY>429</locationY>
        <assignmentItems>
            <assignToReference>notFoundProductsString</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>product.Name</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>notFoundProductsString</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>,</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LoopOpportunityLineItems</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Update the opportunity to now associate with the new price book the user chose at beginning of the flow. This needs to happen AFTER we have deleted any existing opportunity line items that were associated with the previous price book.</description>
        <name>AssignOpportunityPriceBook</name>
        <label>AssignOpportunityPriceBook</label>
        <locationX>373</locationX>
        <locationY>755</locationY>
        <assignmentItems>
            <assignToReference>opportunity.Pricebook2Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>NewPriceBookIdChoice</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>UpdateOpportunity</targetReference>
        </connector>
    </assignments>
    <choices>
        <name>PromptUserToContinue_NotRemoveMissingProductsFromOpportunity</name>
        <choiceText>&lt;SPAN ALIGN=&quot;LEFT&quot;&gt;&lt;FONT FACE=&quot;Arial&quot; STYLE=&quot;font-size:12px&quot; COLOR=&quot;#000000&quot; LETTERSPACING=&quot;0&quot; KERNING=&quot;0&quot;&gt;&lt;B&gt;No,&lt;/B&gt; cancel price book change&lt;/FONT&gt;&lt;/SPAN&gt;</choiceText>
        <dataType>Boolean</dataType>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </choices>
    <choices>
        <name>PromptUserToContinue_YesRemoveMissingProductsFromOpportunity</name>
        <choiceText>&lt;SPAN ALIGN=&quot;LEFT&quot;&gt;&lt;FONT FACE=&quot;Arial&quot; STYLE=&quot;font-size:12px&quot; COLOR=&quot;#000000&quot; LETTERSPACING=&quot;0&quot; KERNING=&quot;0&quot;&gt;&lt;B&gt;Yes,&lt;/B&gt; remove missing products from opportunity&lt;/FONT&gt;&lt;/SPAN&gt;</choiceText>
        <dataType>Boolean</dataType>
        <value>
            <booleanValue>true</booleanValue>
        </value>
    </choices>
    <decisions>
        <description>Determine if we found the equivalent product in the new price book.
If yes then we&apos;ll add it to the new list of line items to create at end of flow.
If no then add the product name to a list to prompt user about missing products.</description>
        <name>DidFindNewPriceBookEntry</name>
        <label>DidFindNewPriceBookEntry</label>
        <locationX>675</locationX>
        <locationY>289</locationY>
        <defaultConnectorLabel>DefaultDidFindNewPriceBookEntryOutcome</defaultConnectorLabel>
        <rules>
            <name>FoundNewPriceBookEntry</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>newPriceBookEntry</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignNewOpportunityLineItem</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
        <rules>
            <name>NotFoundNewPriceBookEntry</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>newPriceBookEntry</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignNotFoundProduct</targetReference>
            </connector>
            <label>No</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determine if the user chose to continue with the flow which will delete from the opportunity the products that weren&apos;t found in the new price book or if the user chose to cancel the flow (make no changes to opportunity).</description>
        <name>DidUserDecideToContinue</name>
        <label>DidUserDecideToContinue</label>
        <locationX>40</locationX>
        <locationY>652</locationY>
        <defaultConnectorLabel>DefaultDidUserDecideToContinueOutcome</defaultConnectorLabel>
        <rules>
            <name>UserDecidedYesToContinue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>PromptUserToContinue_DoYouWantToContinue</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>PromptUserToContinue_YesRemoveMissingProductsFromOpportunity</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>HaveOpportunityLineItemsToDelete</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
        <rules>
            <name>UserDecidedNotToContinue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>PromptUserToContinue_DoYouWantToContinue</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>PromptUserToContinue_NotRemoveMissingProductsFromOpportunity</elementReference>
                </rightValue>
            </conditions>
            <label>No</label>
        </rules>
    </decisions>
    <decisions>
        <description>Flow &apos;Create&apos; operations cannot operate on a null or empty list, so we must add a Decision element to check if there are or are not any opportunity line items to actually create. If yes then route through create operation, otherwise skip it.</description>
        <name>HaveOpportunityLineItemsToCreate</name>
        <label>HaveOpportunityLineItemsToCreate</label>
        <locationX>659</locationX>
        <locationY>754</locationY>
        <defaultConnectorLabel>DefaultHaveOpportunityLineItemsToCreateOutcome</defaultConnectorLabel>
        <rules>
            <name>YesHaveOpportunityLineItemsToCreate</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>newOpportunityLineItems</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>CreateNewOpportunityLineItems</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
        <rules>
            <name>DontHaveOpportunityLineItemsToCreate</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>newOpportunityLineItems</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <label>No</label>
        </rules>
    </decisions>
    <decisions>
        <description>Flow &apos;Delete&apos; operations cannot operate on a null or empty list, so we must add a Decision element to check if there are or are not any opportunity line items to actually delete. If yes then route through delete operation, otherwise skip it.</description>
        <name>HaveOpportunityLineItemsToDelete</name>
        <label>HaveOpportunityLineItemsToDelete</label>
        <locationX>203</locationX>
        <locationY>654</locationY>
        <defaultConnectorLabel>DefaultHaveOpportunityLineItemsToDeleteOutcome</defaultConnectorLabel>
        <rules>
            <name>YesHaveOpportunityLineItemsToDelete</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>opportunityLineItems</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>DeleteOpportunityLineItems</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
        <rules>
            <name>DontHaveOpportunityLineItemsToDelete</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>opportunityLineItems</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignOpportunityPriceBook</targetReference>
            </connector>
            <label>No</label>
        </rules>
    </decisions>
    <decisions>
        <description>Inspect the string of concatenated product names that were not found in the new price book. If the string is not null then at least one product was not found and we need to prompt user on how to proceed, otherwise continue like normal.</description>
        <name>IsNewPriceBookMissingProducts</name>
        <label>IsNewPriceBookMissingProducts</label>
        <locationX>108</locationX>
        <locationY>407</locationY>
        <defaultConnectorLabel>DefaultIsNewPriceBookMissingProductsOutcome</defaultConnectorLabel>
        <rules>
            <name>NewPriceBookIsMissingProducts</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>notFoundProductsString</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>PromptUserToContinue</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
        <rules>
            <name>NewPriceBookIsNotMissingProducts</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>notFoundProductsString</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>HaveOpportunityLineItemsToDelete</targetReference>
            </connector>
            <label>No</label>
        </rules>
    </decisions>
    <dynamicChoiceSets>
        <description>Get a list of active price books for user to choose as the new price book to assign to this oppportunity. We exclude the current price book, obviously.</description>
        <name>NewPriceBookChoices</name>
        <dataType>String</dataType>
        <displayField>Name</displayField>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>opportunity.Pricebook2Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>Pricebook2</object>
        <sortField>Name</sortField>
        <sortOrder>Asc</sortOrder>
        <valueField>Id</valueField>
    </dynamicChoiceSets>
    <label>Change Opportunity Price Book and Keep Line Items</label>
    <description>Takes an opportunity id as parameter. When flow starts it prompts user to choose a new price book for the opportunity then replaces all the line items with equivalent products and quantities from the new price book. If any product cannot be found in the new price book then user is prompted how to proceed: remove from opportunity or cancel operation.</description>
    <loops>
        <description>Iterate through the existing line items and build up a new list with the same product, quantity, description, and unit price but using the new price book entry. If a product is not found in the new price book then we&apos;ll keep track of that too and prompt user on how to proceed after the loop.</description>
        <name>LoopOpportunityLineItems</name>
        <label>LoopOpportunityLineItems</label>
        <locationX>105</locationX>
        <locationY>291</locationY>
        <assignNextValueToReference>opportunityLineItem</assignNextValueToReference>
        <collectionReference>opportunityLineItems</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>GetProduct</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>IsNewPriceBookMissingProducts</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processType>Flow</processType>
    <recordCreates>
        <description>Insert the new opportunity line items that are associated with the new price book the user chose at beginning of the flow.</description>
        <name>CreateNewOpportunityLineItems</name>
        <label>CreateNewOpportunityLineItems</label>
        <locationX>811</locationX>
        <locationY>754</locationY>
        <inputReference>newOpportunityLineItems</inputReference>
    </recordCreates>
    <recordDeletes>
        <description>Delete the line items associated to the previous price book.</description>
        <name>DeleteOpportunityLineItems</name>
        <label>DeleteOpportunityLineItems</label>
        <locationX>370</locationX>
        <locationY>656</locationY>
        <connector>
            <targetReference>AssignOpportunityPriceBook</targetReference>
        </connector>
        <inputReference>opportunityLineItems</inputReference>
    </recordDeletes>
    <recordLookups>
        <description>Look up the equivalent price book entry for this loop iteration product in the new price book.</description>
        <name>GetNewPriceBookEntry</name>
        <label>GetNewPriceBookEntry</label>
        <locationX>527</locationX>
        <locationY>292</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>DidFindNewPriceBookEntry</targetReference>
        </connector>
        <filters>
            <field>Pricebook2Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>NewPriceBookIdChoice</elementReference>
            </value>
        </filters>
        <filters>
            <field>Product2Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>opportunityLineItem.Product2Id</elementReference>
            </value>
        </filters>
        <object>PricebookEntry</object>
        <outputReference>newPriceBookEntry</outputReference>
        <queriedFields>Id</queriedFields>
    </recordLookups>
    <recordLookups>
        <description>Get the opportunity whose price book to change.</description>
        <name>GetOpportunity</name>
        <label>GetOpportunity</label>
        <locationX>106</locationX>
        <locationY>22</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetOpportunityLineItems</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>opportunityId</elementReference>
            </value>
        </filters>
        <object>Opportunity</object>
        <outputReference>opportunity</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Name</queriedFields>
        <queriedFields>Pricebook2Id</queriedFields>
    </recordLookups>
    <recordLookups>
        <description>Get all products on the opportunity associated with the current price book. We will copy user-entered data (e.g. description, unit price, etc) onto the new line items that we look up from the new price book. We will then delete these at later step in flow.</description>
        <name>GetOpportunityLineItems</name>
        <label>GetOpportunityLineItems</label>
        <locationX>109</locationX>
        <locationY>112</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>ChooseNewPriceBook</targetReference>
        </connector>
        <filters>
            <field>OpportunityId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>opportunity.Id</elementReference>
            </value>
        </filters>
        <object>OpportunityLineItem</object>
        <outputReference>opportunityLineItems</outputReference>
        <queriedFields>Description</queriedFields>
        <queriedFields>Product2Id</queriedFields>
        <queriedFields>Quantity</queriedFields>
        <queriedFields>UnitPrice</queriedFields>
    </recordLookups>
    <recordLookups>
        <description>Get the product associated with this loop iteration opportunity line item. We will try to find it in the new price book so we can build up the new line items list.</description>
        <name>GetProduct</name>
        <label>GetProduct</label>
        <locationX>379</locationX>
        <locationY>291</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetNewPriceBookEntry</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>opportunityLineItem.Product2Id</elementReference>
            </value>
        </filters>
        <object>Product2</object>
        <outputReference>product</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Name</queriedFields>
    </recordLookups>
    <recordUpdates>
        <description>This is the actual database update operation that switches the opportunity over to the new price book.</description>
        <name>UpdateOpportunity</name>
        <label>UpdateOpportunity</label>
        <locationX>518</locationX>
        <locationY>754</locationY>
        <connector>
            <targetReference>HaveOpportunityLineItemsToCreate</targetReference>
        </connector>
        <inputReference>opportunity</inputReference>
    </recordUpdates>
    <screens>
        <name>ChooseNewPriceBook</name>
        <label>ChooseNewPriceBook</label>
        <locationX>106</locationX>
        <locationY>202</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <connector>
            <targetReference>LoopOpportunityLineItems</targetReference>
        </connector>
        <fields>
            <name>ChooseNewPriceBook_Paragraph1</name>
            <fieldText>&lt;SPAN ALIGN=&quot;LEFT&quot;&gt;&lt;FONT FACE=&quot;Arial&quot; STYLE=&quot;font-size:12px&quot; COLOR=&quot;#000000&quot; LETTERSPACING=&quot;0&quot; KERNING=&quot;0&quot;&gt;Choose New Price Book for&lt;/FONT&gt;&lt;/SPAN&gt;&lt;DIV ALIGN=&quot;LEFT&quot;&gt;&lt;FONT FACE=&quot;Arial&quot; STYLE=&quot;font-size:16px&quot; COLOR=&quot;#000000&quot; LETTERSPACING=&quot;0&quot; KERNING=&quot;0&quot;&gt;&lt;B&gt;{!opportunity.Name}&lt;/B&gt;&lt;FONT STYLE=&quot;font-size:12px&quot;&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/DIV&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>ChooseNewPriceBook_Paragraph2</name>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>NewPriceBookIdChoice</name>
            <choiceReferences>NewPriceBookChoices</choiceReferences>
            <dataType>String</dataType>
            <fieldText>New Price Book</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>false</isRequired>
        </fields>
    </screens>
    <screens>
        <name>PromptUserToContinue</name>
        <label>PromptUserToContinue</label>
        <locationX>40</locationX>
        <locationY>546</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <connector>
            <targetReference>DidUserDecideToContinue</targetReference>
        </connector>
        <fields>
            <name>PromptUserToContinue_Paragraph1</name>
            <fieldText>&lt;SPAN ALIGN=&quot;LEFT&quot;&gt;&lt;FONT FACE=&quot;Arial&quot; STYLE=&quot;font-size:14px&quot; COLOR=&quot;#FF0000&quot; LETTERSPACING=&quot;0&quot; KERNING=&quot;0&quot;&gt;&lt;B&gt;Warning: these products were not found in the new price book:&lt;/B&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;DIV ALIGN=&quot;LEFT&quot;&gt;&lt;FONT FACE=&quot;Arial&quot; STYLE=&quot;font-size:12px&quot; COLOR=&quot;#000000&quot; LETTERSPACING=&quot;0&quot; KERNING=&quot;1&quot;&gt;&lt;B&gt;{!notFoundProductsString}&lt;/B&gt;&lt;/FONT&gt;&lt;/DIV&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>PromptUserToContinue_Paragraph2</name>
            <fieldText>&lt;SPAN ALIGN=&quot;LEFT&quot;&gt;&lt;FONT FACE=&quot;Arial&quot; STYLE=&quot;font-size:12px&quot; COLOR=&quot;#000000&quot; LETTERSPACING=&quot;0&quot; KERNING=&quot;0&quot;&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;DIV ALIGN=&quot;LEFT&quot;&gt;&lt;FONT FACE=&quot;Arial&quot; STYLE=&quot;font-size:14px&quot; COLOR=&quot;#000000&quot; LETTERSPACING=&quot;0&quot; KERNING=&quot;0&quot;&gt;&lt;U&gt;Please carefully review your options below:&lt;/U&gt;&lt;/FONT&gt;&lt;/DIV&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>PromptUserToContinue_Paragraph3</name>
            <fieldText>&lt;SPAN ALIGN=&quot;LEFT&quot;&gt;&lt;FONT FACE=&quot;Arial&quot; STYLE=&quot;font-size:12px&quot; COLOR=&quot;#000000&quot; LETTERSPACING=&quot;0&quot; KERNING=&quot;0&quot;&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;DIV ALIGN=&quot;LEFT&quot;&gt;&lt;FONT FACE=&quot;Arial&quot; STYLE=&quot;font-size:12px&quot; COLOR=&quot;#0000FF&quot; LETTERSPACING=&quot;0&quot; KERNING=&quot;0&quot;&gt;&lt;B&gt;Option 1.&lt;/B&gt;&lt;FONT COLOR=&quot;#000000&quot;&gt; To cancel, choose the &lt;B&gt;No&lt;/B&gt; option below then click &lt;B&gt;Next&lt;/B&gt; button. You will be taken back to the opportunity page.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/DIV&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>PromptUserToContinue_Paragraph4</name>
            <fieldText>&lt;SPAN ALIGN=&quot;LEFT&quot;&gt;&lt;FONT FACE=&quot;Arial&quot; STYLE=&quot;font-size:12px&quot; COLOR=&quot;#000000&quot; LETTERSPACING=&quot;0&quot; KERNING=&quot;0&quot;&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;DIV ALIGN=&quot;LEFT&quot;&gt;&lt;FONT FACE=&quot;Arial&quot; STYLE=&quot;font-size:12px&quot; COLOR=&quot;#0000FF&quot; LETTERSPACING=&quot;0&quot; KERNING=&quot;0&quot;&gt;&lt;B&gt;Option 2.&lt;/B&gt;&lt;FONT COLOR=&quot;#000000&quot;&gt; To choose a different price book, click the &lt;B&gt;Previous&lt;/B&gt; button.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/DIV&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>PromptUserToContinue_Paragraph5</name>
            <fieldText>&lt;SPAN ALIGN=&quot;LEFT&quot;&gt;&lt;FONT FACE=&quot;Arial&quot; STYLE=&quot;font-size:12px&quot; COLOR=&quot;#FF0000&quot; LETTERSPACING=&quot;0&quot; KERNING=&quot;0&quot;&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;DIV ALIGN=&quot;LEFT&quot;&gt;&lt;FONT FACE=&quot;Arial&quot; STYLE=&quot;font-size:12px&quot; COLOR=&quot;#0000FF&quot; LETTERSPACING=&quot;0&quot; KERNING=&quot;0&quot;&gt;&lt;B&gt;Option 3. &lt;/B&gt;&lt;FONT COLOR=&quot;#000000&quot;&gt;To continue with price book change and &lt;FONT COLOR=&quot;#FF0000&quot; KERNING=&quot;1&quot;&gt;remove&lt;/FONT&gt; the products listed above from the opportunity, choose &lt;B&gt;Yes&lt;/B&gt; option below then click &lt;B&gt;Next&lt;/B&gt; button.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/DIV&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>PromptUserToContinue_Paragraph6</name>
            <fieldText>&lt;SPAN ALIGN=&quot;LEFT&quot;&gt;&lt;FONT FACE=&quot;Arial&quot; STYLE=&quot;font-size:14px&quot; COLOR=&quot;#000000&quot; LETTERSPACING=&quot;0&quot; KERNING=&quot;0&quot;&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;DIV ALIGN=&quot;LEFT&quot;&gt;&lt;FONT FACE=&quot;Arial&quot; STYLE=&quot;font-size:14px&quot; COLOR=&quot;#000000&quot; LETTERSPACING=&quot;0&quot; KERNING=&quot;0&quot;&gt;&lt;U&gt;Please choose your option:&lt;/U&gt;&lt;FONT STYLE=&quot;font-size:12px&quot;&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/DIV&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>PromptUserToContinue_DoYouWantToContinue</name>
            <choiceReferences>PromptUserToContinue_YesRemoveMissingProductsFromOpportunity</choiceReferences>
            <choiceReferences>PromptUserToContinue_NotRemoveMissingProductsFromOpportunity</choiceReferences>
            <dataType>Boolean</dataType>
            <defaultSelectedChoiceReference>PromptUserToContinue_NotRemoveMissingProductsFromOpportunity</defaultSelectedChoiceReference>
            <fieldText>Remove missing products?</fieldText>
            <fieldType>RadioButtons</fieldType>
            <isRequired>true</isRequired>
        </fields>
    </screens>
    <startElementReference>GetOpportunity</startElementReference>
    <variables>
        <description>Equivalent line item on the opportunity but now referencing the product from the new price book.</description>
        <name>newOpportunityLineItem</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>OpportunityLineItem</objectType>
    </variables>
    <variables>
        <description>New products to add to the opportunity once switch over to the new price book. Built up in the loop element.</description>
        <name>newOpportunityLineItems</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>OpportunityLineItem</objectType>
    </variables>
    <variables>
        <description>The price book entry of the equivalent product from the current opportunity line item.</description>
        <name>newPriceBookEntry</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>PricebookEntry</objectType>
    </variables>
    <variables>
        <description>Comma delimited string of products not found in the new price book so we can notify user before they make decision to change opportunity price book and swap out line items.</description>
        <name>notFoundProductsString</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>opportunity</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Opportunity</objectType>
    </variables>
    <variables>
        <description>Opportunity whose price book to change.</description>
        <name>opportunityId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Loop variable when iterating through the list of existing products on the opportunity.</description>
        <name>opportunityLineItem</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>OpportunityLineItem</objectType>
    </variables>
    <variables>
        <description>List of currently assigned products on the opportunity. Will build a new list of line items based on matching products in the new price book.</description>
        <name>opportunityLineItems</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>OpportunityLineItem</objectType>
    </variables>
    <variables>
        <description>Current price book assigned to opportunity</description>
        <name>priceBook</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Pricebook2</objectType>
    </variables>
    <variables>
        <name>product</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Product2</objectType>
    </variables>
</Flow>
